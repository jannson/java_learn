<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>Struts 2 Web Application</display-name>
 
 	<filter>
		<filter-name>redisp</filter-name>
		<filter-class>com.everhomes.ReDispatcherFilter</filter-class>
		<init-param>
			<param-name>includeServlets</param-name>
			<param-value>meteor</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>redisp</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
  <servlet>
        <description>MeteorServlet</description>
        <servlet-name>MeteorServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.MeteorServlet</servlet-class>
        <!-- Use it with mvn jetty:run -->
        <init-param>
            <param-name>org.atmosphere.cpr.packages</param-name>
            <param-value>org.atmosphere.samples</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>MeteorServlet</servlet-name>
        <url-pattern>/meteor</url-pattern>
    </servlet-mapping>
 
  <filter>
	 <filter-name>struts2</filter-name>
	 <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
   </filter>
  
  <filter-mapping>
	<filter-name>struts2</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping>
 
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
    <session-config>
        <session-timeout>25</session-timeout>
    </session-config>
  
</web-app>